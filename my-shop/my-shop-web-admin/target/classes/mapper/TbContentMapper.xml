<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damiza.my.shop.web.admin.dao.TbUserDao">
        <!-- 因为这里有些查询条件可以提取出来 -->
        <sql id="tbContentColumns">
            a.id,
            a.category_id AS categoryId,
            a.title,
            a.sub_title AS subTitle,
            a.title_desc AS titleDesc,
            a.url,
            a.pic,
            a.pic2,
            a.content,
            a.created,
            a.updated

       </sql>



        <!--这里的ID要和方法里的名字对应-->
        <!-- 如果实体类的大小写和表中字段不匹配,可以用AS给表中字段起个别名 -->
        <select id="selectAll" resultType="TbContent">

            SELECT
            <include refid="tbContentColumns"/>
            FROM
            tb_tbContent AS a

        </select>

        <!-- 因为主键自增,所以可以不写id -->
        <insert id="insert">
        INSERT INTO tb_user (
          `id`,
          `username`,
          `password`,
          `phone`,
          `email`,
          `created`,
          `updated`
        )
        VALUES
          (
            #{id},
            #{username},
            #{password},
            #{phone},
            #{email},
            #{created},
            #{updated}
          );

    </insert>
        <!-- 根据id删除 -->
        <delete id="delete">
        DELETE FROM tb_user WHERE id = #{id};

    </delete>

        <!-- 查询一定要有结果映射 -->
        <select id="getById" resultType="TbUser">
            SELECT
            <include refid="tbUserColumns"/>
            FROM
            tb_user AS a
            WHERE a.id = #{id};
        </select>

        <!-- 更新用户的id不变,创建时间也不变 -->
        <update id="update">

        UPDATE
          tb_user
        SET
          username = #{username},
          password = #{password},
          phone = #{phone},
          email = #{email},
          updated = #{updated}
        WHERE id = #{id};
    </update>

        <!--&lt;!&ndash; 根据用户名模糊查询 &ndash;&gt;-->
        <!--<select id="selectByUsername" resultType="TbUser">-->
        <!--SELECT-->
        <!--<include refid="tbUserColumns"/>-->
        <!--FROM-->
        <!--tb_user AS a-->
        <!--WHERE-->
        <!--a.username LIKE CONCAT('%',#{username},'%')-->

        <!--</select>-->

        <!-- 登陆校验,用邮箱登录,邮箱查询 -->
        <select id="getByEmail" resultType="TbUser">
            SELECT
            <include refid="tbUserColumns"/>

            --           a.id,
            --           a.username,
            --           a.password,
            --           a.phone,
            --           a.email,
            --           a.created,
            --           a.updated
            FROM
            tb_user AS a
            WHERE
            a.email = #{email};

        </select>

        <delete id="deleteMulti">
            DELETE FROM tb_user
            WHERE id IN
            <foreach collection="array" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </delete>

        <select id="page" resultType="TbUser" parameterType="java.util.Map">
            SELECT
            <include refid="tbUserColumns"/>
            FROM
            tb_user AS a
            <where>
                <if test="tbUser.username != null and tbUser.username != '' ">
                    AND a.username LIKE  CONCAT('%',#{tbUser.username},'%')
                </if>
                <if test="tbUser.phone != null and tbUser.phone != '' ">
                    AND a.phone LIKE  CONCAT('%',#{tbUser.phone},'%')
                </if>
                <if test="tbUser.email != null and tbUser.email != '' ">
                    AND a.email LIKE  CONCAT('%',#{tbUser.email},'%')
                </if>
            </where>
            LIMIT #{start},#{length}
        </select>

        <!--查询总比数 -->
        <select id="count" resultType="java.lang.Integer">
            SELECT COUNT(*) FROM tb_user AS a
            <where>
                <if test="username != null and username != '' ">
                    AND a.username LIKE  CONCAT('%',#{username},'%')
                </if>
                <if test="phone != null and phone != '' ">
                    AND a.phone LIKE  CONCAT('%',#{phone},'%')
                </if>
                <if test="email != null and email != '' ">
                    AND a.email LIKE  CONCAT('%',#{email},'%')
                </if>
            </where>
        </select>
    </mapper>
</mapper>